{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-229a287b\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"d-flex\"\n};\nconst _hoisted_3 = {\n  class: \"table table-bordered mt-5\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Tareas\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Estatus\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\",\n  class: \"text-center\"\n}, \"#\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\",\n  class: \"text-center\"\n}, \"#\")])], -1 /* HOISTED */));\nconst _hoisted_5 = {\n  style: {\n    \"width\": \"120px\"\n  }\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"fa fa-pen\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_9 = [_hoisted_8];\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"fa fa-trash\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_12 = [_hoisted_11];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Entrada de datos\"), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.task = $event),\n    type: \"text\",\n    placeholder: \"Escribe una nueva tarea\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.task]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.submitTask && $options.submitTask(...args)),\n    class: \"btn btn-warning rounded-0\"\n  }, \"Enviar\")]), _createCommentVNode(\"Tabla de tareas\"), _createElementVNode(\"table\", _hoisted_3, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, (task, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, [_createElementVNode(\"span\", {\n      class: _normalizeClass({\n        'finished': task.status === 'Terminada'\n      })\n    }, _toDisplayString(task.name), 3 /* TEXT, CLASS */)]), _createElementVNode(\"td\", _hoisted_5, [_createElementVNode(\"span\", {\n      onClick: $event => $options.changeStatus(index),\n      class: _normalizeClass([\"pointer\", {\n        'text-danger': task.status === 'Pendiente',\n        'text-warning': task.status === 'En proceso',\n        'text-success': task.status === 'Terminada'\n      }])\n    }, _toDisplayString($options.firstCharUpper(task.status)), 11 /* TEXT, CLASS, PROPS */, _hoisted_6)]), _createElementVNode(\"td\", null, [_createElementVNode(\"div\", {\n      class: \"text-center\",\n      onClick: $event => $options.editTask(index)\n    }, _hoisted_9, 8 /* PROPS */, _hoisted_7)]), _createElementVNode(\"td\", null, [_createElementVNode(\"div\", {\n      class: \"text-center\",\n      onClick: $event => $options.deleteTask(index)\n    }, _hoisted_12, 8 /* PROPS */, _hoisted_10)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;AAAW;;EAEfA,KAAK,EAAC;AAAQ;;EAMZA,KAAK,EAAC;AAA2B;gEAC1CC,oBAOQ,6BANNA,oBAKK,0BAJHA,oBAA2B;EAAvBC,KAAK,EAAC;AAAK,GAAC,QAAM,gBACtBD,oBAA4B;EAAxBC,KAAK,EAAC;AAAK,GAAC,SAAO,gBACvBD,oBAA0C;EAAtCC,KAAK,EAAC,KAAK;EAACF,KAAK,EAAC;GAAc,GAAC,gBACrCC,oBAA0C;EAAtCC,KAAK,EAAC,KAAK;EAACF,KAAK,EAAC;GAAc,GAAC;;EAQjCG,KAAoB,EAApB;IAAA;EAAA;AAAoB;;;gEAapBF,oBAA+B;EAAzBD,KAAK,EAAC;AAAW;oBAAvBI,UAA+B;;iEAK/BH,oBAAiC;EAA3BD,KAAK,EAAC;AAAa;qBAAzBK,WAAiC;;uBAxCzCC,oBA8CM,OA9CNC,UA8CM,GA7CJC,wCAAwB,EACxBP,oBAGM,OAHNQ,UAGM,mBAFJR,oBAA6F;+DAA7ES,UAAI;IAAEC,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,yBAAyB;IAACZ,KAAK,EAAC;iDAA9DU,UAAI,KACpBT,oBAA6E;IAApEY,OAAK,yCAAEC,mDAAU;IAAEd,KAAK,EAAC;KAA4B,QAAM,KAGtEQ,sCAAsB,EACtBP,oBAqCI,SArCJc,UAqCI,GApCNC,UAOQ,EACRf,oBA2BQ,mCA1BNK,oBAyBKW,6BAzBsBP,WAAK,GAApBQ,IAAI,EAACC,KAAK;yBAAtBb,oBAyBK;MAzB8Bc,GAAG,EAAED;IAAK,IAC3ClB,oBAEK,aADHA,oBAA0E;MAAnED,KAAK;QAAA,YAAckB,IAAI,CAACG,MAAM;MAAA;wBAAmBH,IAAI,CAACI,IAAI,2BAEnErB,oBAUO,MAVPsB,UAUO,GATLtB,oBAQS;MARFY,OAAK,YAAEC,qBAAY,CAACK,KAAK;MAAGnB,KAAK,mBAAC,SAAS;QAAA,eAC3BkB,IAAI,CAACG,MAAM;wBAAuCH,IAAI,CAACG,MAAM;wBAAwCH,IAAI,CAACG,MAAM;;wBAKrIP,uBAAc,CAACI,IAAI,CAACG,MAAM,gDAI9BpB,oBAIK,aAHHA,oBAEM;MAFDD,KAAK,EAAC,aAAa;MAAEa,OAAK,YAAEC,iBAAQ,CAACK,KAAK;iDAIjDlB,oBAIK,aAHHA,oBAEM;MAFDD,KAAK,EAAC,aAAa;MAAEa,OAAK,YAAEC,mBAAU,CAACK,KAAK","names":["class","_createElementVNode","scope","style","_hoisted_8","_hoisted_11","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","$data","type","placeholder","onClick","$options","_hoisted_3","_hoisted_4","_Fragment","task","index","key","status","name","_hoisted_5"],"sourceRoot":"","sources":["C:\\Users\\Jair\\Desktop\\CursoDesarrolloWeb\\HTML\\todo-app\\src\\components\\TodoApp.vue"],"sourcesContent":["<template>\n  <div class=\"container\">    \n    <!-- Entrada de datos-->\n    <div class=\"d-flex\">\n      <input v-model=\"task\" type=\"text\" placeholder=\"Escribe una nueva tarea\" class=\"form-control\">\n      <button @click=\"submitTask\" class=\"btn btn-warning rounded-0\">Enviar</button>\n    </div>\n\n    <!--Tabla de tareas-->\n    <table class=\"table table-bordered mt-5\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Tareas</th>\n      <th scope=\"col\">Estatus</th>\n      <th scope=\"col\" class=\"text-center\">#</th>\n      <th scope=\"col\" class=\"text-center\">#</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr v-for=\"(task,index) in tasks\" :key=\"index\">\n      <td>\n        <span :class=\"{'finished':task.status==='Terminada'}\">{{task.name}}</span>\n      </td>\n      <td style=\"width: 120px\">\n        <span @click=\"changeStatus(index)\" class=\"pointer\"\n        :class=\"{'text-danger':task.status==='Pendiente',\n        'text-warning':task.status==='En proceso',\n        'text-success':task.status==='Terminada'\n      }\"\n        >\n        {{firstCharUpper(task.status)}}\n\n          </span>\n        </td>\n      <td>\n        <div class=\"text-center\" @click=\"editTask(index)\">\n          <span class=\"fa fa-pen\"></span>\n        </div>\n      </td>\n      <td>\n        <div class=\"text-center\" @click=\"deleteTask(index)\">\n          <span class=\"fa fa-trash\"></span>\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n\n  data(){\n    return{\n      task:'',\n      editedTask: null,\n      availableStatuses:['Pendiente', 'En proceso','Terminada'],\n       tasks:[\n        {\n          name: 'Hacer tarea programacion',\n          status: 'Pendiente',\n        },\n       ]\n    }\n  },\n\n  methods: {\n    submitTask(){\n      if(this.task.length === 0)return;\n\n      if(this.editedTask===null){\n        this.tasks.push({\n        name: this.task,\n        status: 'Pendiente'\n        });\n      }else{\n        this.tasks[this.editedTask].name=this.task;\n        this.editedTask=null;\n      }\n\n      this.task = '';\n    },\n    \n    deleteTask(index){\n      this.tasks.splice(index,1);\n    },\n\n    editTask(index){\n      this.task = this.tasks[index].name;\n      this.editedTask=index;\n    },\n\n    changeStatus(index){\n      let newIndex = this.availableStatuses.indexOf(this.tasks[index].status);\n      if(++newIndex>2)newIndex=0;\n      this.tasks[index].status=this.availableStatuses[newIndex];\n    },\n\n    firstCharUpper(str){\n      return str.charAt(0).toUpperCase()+str.slice(1);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.pointer{\n  cursor: pointer;\n}\n\n.finished{\n  text-decoration: line-through;\n}\n</style>"]},"metadata":{},"sourceType":"module"}